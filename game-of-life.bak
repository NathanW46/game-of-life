#include <SFML/Graphics.hpp>
#include <ctime>
#include <fstream>
#include <iostream>
#include <sstream>
#include <vector>

using namespace std;

const int WIDTH = 800;
const int HEIGHT = 800;
const int CELL_SIZE = 10;
const int GRID_WIDTH = WIDTH / CELL_SIZE;
const int GRID_HEIGHT = HEIGHT / CELL_SIZE;
const int FPS = 2;

class Grid {
private:
  vector<vector<bool>> cells;
  int height, width;

public:
  // constructor
  Grid(int w, int h) {
    width = w;
    height = h;
    cells.resize(height, vector<bool>(width, false));
  }

  void create();

  void grid_from_file(const string filename);
  int get_neighbors(int x, int y) const;
  void update();

  // setters
  void set(int x, int y, bool state);

  // getters
  bool get(int x, int y) const;
  int get_height() const { return height; }
  int get_width() const { return width; }
};

int Grid::get_neighbors(int x, int y) const {
  int n = 0;
  for (int i = -1; i <= 1; ++i) {
    for (int j = -1; j <= 1; ++j) {
      if ((0 == j) && (0 == i)) {
        continue;
      } else if (get(x + i, y + j)) {
        n += 1;
      }
    }
  }
  return n;
}

bool Grid::get(int x, int y) const { return cells[x][y]; }

void Grid::grid_from_file(const string filename) {
  ifstream file(filename);
  if (!file.is_open()) {
    cerr << "File Error" << endl;
    return;
  }

  string line;
  while (getline(file, line)) {
    if (line.empty() || line[0] == '#')
      continue; // ignore empty line and comments

    istringstream sin(line);
    int x, y;

    if (sin >> x >> y) {
      if (x >= 0 && x < width && y >= 0 && y < height) {
        set(x, y, true);
      }
    }
  }
  file.close();
}

void Grid::set(int x, int y, bool state) { cells[x][y] = state; }

void Grid::create() {
  sf::RenderWindow window(
      sf::VideoMode(GRID_WIDTH * CELL_SIZE, GRID_HEIGHT * CELL_SIZE),
      "Conway's Game of Life");
  window.setFramerateLimit(10);

  sf::RectangleShape cellShape(sf::Vector2f(CELL_SIZE, CELL_SIZE));
  cellShape.setFillColor(sf::Color::Green);
}

int main(int argc, char *argv[]) {
  if (argc != 2) {
    cerr << "Usage: filename" << endl;
    return 1;
  }

  string filename = argv[1];

  Grid grid(HEIGHT, WIDTH);

  return 0;
}
